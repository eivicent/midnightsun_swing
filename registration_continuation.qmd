---
title: "registration_continuation"
format: html
---

```{r LIBRARIES AND SETUP}
library(googlesheets4)
library(tidyverse)
library(blastula)

ss <- "https://docs.google.com/spreadsheets/d/18wAjNf2iROcjmqxMbuCYYjPOIsXcY4FxOzKBwyR_ZqU/edit#gid=1969315070"

df <- read_sheet(ss, sheet = "Form responses 1") %>%
  rename_with(~c("timestamp", "email", "firstname", "lastname", "country",
                 "pass","role", "partner", "level", "years",
                 "tshirt", "classicsize","fittedsize", 
                 "color", "host", "agree", "volunteer"))
```


```{r CLEAN}
df_clean <- df %>% 
    mutate(
    main = if_else(str_detect(pass, "Party"), "**Party Pass**",
                   str_glue("**Lindy Hop** as **{role}** in the **{level}** level")),
    size = coalesce(classicsize, fittedsize),
    extra = if_else(str_detect(pass,"Jazz"), "Solo Jazz", if_else(str_detect(pass, "Blues"), "Blues", NA)),
    total_price = case_when(
      is.na(extra) & str_detect(pass, "Party") ~ 70,
      !is.na(extra) & str_detect(pass, "Party") ~ 110,
      !is.na(extra) & !str_detect(pass, "Party") ~ 250,
      T ~ 195) + if_else(str_detect(tshirt, "Yes"), 25, 0),
    tshirt_answer = if_else(!is.na(str_to_title(str_extract(tshirt, "(?<= - ).*(?= -)"))),
                            str_glue("{str_to_title(str_extract(tshirt, '(?<= - ).*(?= -)'))}, {size} size in {color}"), NA),
    total_price_aux = case_when(
      total_price == 110 ~ "110",
      total_price == 135 ~ "110 + 25",
      total_price == 195 ~ "195",
      total_price == 250 ~ "195 + 55",
      total_price == 275 ~ "195 + 55 + 25",
      total_price == 220 ~ "195 + 25",
      TRUE ~ "-"
    )
  ) %>%
  select(timestamp, firstname, email, country, main, level, role, partner, extra, tshirt_answer, total_price, total_price_aux, volunteer)
```

```{r EMAIL GENERATION}
generate_email_details <- function(level, role, extra, partner_email, tshirt_answer, total_price, total_price_aux, main) {
  str_glue("As a reminder, these are the details of your registration:
    - {main} 
    - Your extra: **{dplyr::coalesce(extra, '-')}**
    - Your partner: **{dplyr::coalesce(partner_email, '-')}**
    - T-shirt: **{dplyr::coalesce(tshirt_answer, '-')}**
    - Total price: **{total_price}â‚¬** ({total_price_aux})")
}

generate_payment_details <- function(reference){
   str_glue("Please proceed with the payment in the next 14 days using the code **{reference}** in the reference message. You can pay by SEPA bank transfer to the following account:
   - Bank account: **FI82 7997 7996 5259 81**
   - Payee: **Osuuskunta Swing Kollektiivi**
   - BIC: **HOLVFIHH (Only SEPA payments)**
   - Address: **Karjalankatu 2, 00520 Helsinki, Finland**
   - VAT ID: **FI28578381** _(In case you need it)_ \n
   You can also pay using _ePassi/Smartum/Edenred to Black Pepper Swing_ (Send us a screenshot in that case, please)."
  )
}

# Define a single function to construct different types of emails
generate_email <- function(firstname, level, role, extra, partner_email, tshirt_answer, total_price, total_price_aux, volunteer, reference, email_type, main) {
  base_text <- switch(email_type,
    "confirmation" = "Thank you for registering to Midnight Sun Swing Festival. We are happy to **confirm** your spot for it!",
    "waitlist" = "Thank you for registering to Midnight Sun Swing Festival. We are sad to inform you that **you are currently on the waiting list**",
    "reminder" = "It has been a couple of weeks since we sent your **confirmation to the festival** but we still haven't received your payment (or we haven't seen it in our system). \n\nWe kindly ask you to proceed with the payment as soon as possible. It will help us a lot with the organisation of the event :)\n\nIf you have paid in the last few days, it could be that we still have not registered the payment, but if you have paid already long time ago, **please send us a screenshot of the payment as we might have missed it (and apologies for that!)**",
    "volunteers" = "Thank you for showing your interest in **volunteering** at the Midnight Sun Swing Festival. There was more than 20 people who offered their help and we have now contacted and agreed with a few of you. Thanks! \n\n We will reach to some of you again in case we need more help, but for now we kindly ask you to proceed normally with the payment (if you haven't done so already)"
  )
  
  details_text <- generate_email_details(level, role, extra, partner_email, tshirt_answer, total_price, total_price_aux, main)
  
  payment_text <- if(email_type != "waitlist") {
    generate_payment_details(reference)
  } else {
    ""
  }
  
  volunteering_text <- if (volunteer == "Yes") {
    str_glue("You told us you'd would like to **volunteer**. We kindly ask you to **hold your payment for now** until we figure out all the details about volunteers. You will receive a separate email regarding that topic in the coming days where we can discuss about the opportunities.\n\n_(Your spot is confirmed nevertheless and the registration is binding regardless of finding or not a volunteering spot for you. You will receive an email with the final payment amount.)")
  } else {
    ""
  }
  
  follow_us_text <- str_glue("Follow us to be up to date with all the information about Midnight Sun Swing Festival in the [Website](https://www.midnightsunswing.fi/) // [Instagram](https://www.instagram.com/midnightsun_swing/) // [Facebook](https://fb.me/e/OjFPPrO4)\n\nSchedule details will be sent closer to the start of the festival but be ready to have classes on Friday afternoon")
  
  img_string <- add_image(file = "~/GitHub/midnightsun_swing/midnightsunswing.jpeg")
  
  full_email <- str_glue(
    "Hello {firstname},\n\n{base_text}\n\n{details_text}\n\n{payment_text}\n\n{volunteering_text}\n\n{follow_us_text}\n\nSee you soon in Helsinki!\n{img_string}"
  )
  
  return(full_email)
}

```

```{r SEND EMAILS DATA PREPARATION}
all_data <- df_clean %>% 
  left_join(read_sheet(ss, "confirmations") %>% mutate(confirmation = TRUE)) %>% 
  left_join(read_sheet(ss, "waitinglist")) %>% 
  left_join(read_sheet(ss, "volunteers_emailed_payment"))

type <- "confirmation"

title_text <- switch(type,
                     "confirmation" = "Confirmation",
                     "waitlist" = "Waitlist",
                     "reminder" = "Payment Reminder",
                     "volunteers" = "Confirmation (CORRECTED)")

if(type == "volunteers"){
specific_data <- all_data %>% 
  filter(is.na(sent), 
         applied_volunteer, 
         is.na(email_sent))
} 
if(type == "confirmation") {
  specific_data <- all_data %>% 
    filter(is.na(`confirmation email sent`)) %>% 
    filter(confirmation) %>% 
    filter(!is.na(firstname))
}
if(type == "waitlist") {
  specific_data <- all_data %>% 
      filter(is.na(sent), 
         waitlist, 
         is.na(email_sent))
}
if(type == "reminder"){
  specific_data <- all_data %>% 
    filter(`Should have paid` == TRUE)
}
```

```{r SEND EMAILS}
for(ii in 1:nrow(specific_data)) {
    
    firstname <- str_to_title(specific_data$firstname[ii])
    level <- specific_data$level[ii]
    role <- specific_data$role[ii]
    extra <- if_else(type == "volunteers", specific_data$gets[ii],
                     specific_data$extra[ii])
    partner_email <- specific_data$partner[ii]
    tshirt_answer <- specific_data$tshirt_answer[ii]
    total_price <- specific_data$total_price[ii]
    total_price_aux <- specific_data$total_price_aux[ii]
    volunteer <- if_else(type %in% c("volunteers","reminder"), 
                         "No",
                         coalesce(specific_data$volunteer[ii],"No"))
    reference <- specific_data$reference[ii]
    main  <- specific_data$main[ii]
    
    # Generate email body based on type
    email_body <- generate_email(firstname, level, role, extra, partner_email, tshirt_answer, total_price, total_price_aux, volunteer, reference, type, main)
    
    # Compose email
    email <- compose_email(
      body = md(email_body),
      title = title_text,
      footer = "Midnight Sun Swing"
    )

    email

    # smtp_send(
    #   email,
    #   to = specific_data$email[ii],
    #   from = c("Midnight Sun Swing" = "midnightsunswing@gmail.com"),
    #   subject = title_text,
    #   credentials = creds_file(file = "~/gmail_creds")
    # )

    cat(ii, "/", nrow(specific_data), "emails sent for", type, "\n")
}
```


```{r}

# Dark violet: #4636A5
# Violet: #BDB3FF
# Light violet: #DFDAFF
# Yellow: #FFC961
# Light yellow: #FFF5EB
# White: #FFFFFF

aux <- df_clean %>% 
  group_by(role, level) %>% 
  summarise(n = n_distinct(timestamp),.groups = "keep") %>% 
  mutate(max = if_else(level== "Intermediate", 25,50),
         empty = max(max-n,0)) %>% 
  mutate(full = min(max/max, n/max),
         empty = empty/max)


aux2 <- aux %>%
  pivot_longer(cols = full:empty) %>% 
  ungroup() %>% 
  filter(level == "Intermediate") %>% 
  select(role, name, value) %>% 
  mutate(prop = value / sum(aux2$value) *100) %>% 
  mutate(ypos = cumsum(prop)- 0.5*prop ) %>% 
  mutate(role = toupper(role))

aux2 %>%
  ggplot(aes(x = "" ,
             fill = name,
             y = value)) +
  geom_bar(stat = "identity", width = 1)+
  coord_polar("y", start = 0) +
  facet_grid(rows = vars(role)) +
  geom_text(data = . %>% filter(name == "full"),
            aes(x = 0.05, label = scales::label_percent()(value)), 
            size = 6, family = "VOLTAIRE", color = "#4636A5") +
  labs(x =NULL, y = NULL, 
       title = "Advanced") +
  theme_void() +
  theme(strip.text = element_text(color = "#4636A5", size = 28, hjust = 0),
        text = element_text(family = "Voltaire",face = "bold"),
        panel.background = element_rect(fill = "#FFF5EB", color = "#FFF5EB"),
        plot.title.position = "plot",
        plot.title =  element_text(color = "#4636A5", size =35,
                                   hjust = .5, margin = margin(10,0,0,0)),
        plot.background = element_rect(fill = "#FFF5EB", color = "#FFF5EB")) +
  scale_fill_manual(values = c("full" = "#4636A5",
                                "empty" = "#DFDAFF"), guide ="none")
```

```{r}
all_data %>%
  filter(confirmation) %>% 
  filter(is.na(Discount)) %>%
  group_by(tshirt_answer) %>% 
  summarise(n = n()) %>% 
  filter(!is.na(tshirt_answer)) %>% 
  summarise(sum(n))
  group_by(Workshop) %>% 
  summarise(attendees= n(),
            money = sum(total_price - if_else(!is.na(tshirt_answer),25,0)))
  arrange(main, extra) 
  write_sheet(ss = ss, sheet = "Groups (MONEY)")

```


```{r TSHIRTS}


sstshirts <- "https://docs.google.com/spreadsheets/d/1DBnUuxqG9SJkwiNGbf8gA4S276ERwa5gi6IhnEIiGZw/edit#gid=2095043834"

dftshirts <- read_sheet(sstshirts, sheet = "Form responses 1") 

clean_df_tshirts <-dftshirts %>% 
  pivot_longer(cols = !Timestamp:`Email address`) %>% 
  filter(!is.na(value)) %>% 
  mutate(color = if_else(str_detect("YELLOW", name), "Dusty Yellow", "Natural White")) %>% 
  mutate(style = if_else(str_detect(name, "CLASSIC"), "Classic", "Fitted")) %>% 
  mutate(discount = if_else(str_detect(`Email address`, "iines"), T, F)) %>% 
  count(discount, style, color, size = value) %>% 
 union(
    df %>% 
      inner_join(all_data) %>% 
      filter(!is.na(`confirmation email sent`)) %>% 
      mutate(style = if_else(is.na(classicsize), "Fitted", "Classic")) %>% 
      count(discount = coalesce(Discount,F), style, color, size = coalesce(classicsize, fittedsize)) %>% 
      filter(!is.na(color))
    ) %>%
  group_by(discount, style, color, size) %>% 
  summarise(n = sum(n)) %>% ungroup() 
  # mutate(total = sum(n)) 

clean_df_tshirts %>% 
  group_by(style, color,size) %>% 
  summarise(n = sum(n)) %>% 
  mutate(size = factor(size, levels = c("XS","S", "M", "L", "XL", "2XL"))) %>% 
  arrange(size) %>% 
  pivot_wider(names_from = size, values_from = n) %>% 
  gt::gt(groupname_col = NULL, rowname_col = "color") %>% 
  gt::grand_summary_rows(columns = !style, fns = "sum") %>% 
  gt::sub_missing()

clean_df_tshirts %>% 
  group_by(discount) %>% 
  summarise(n = sum(n))
```

